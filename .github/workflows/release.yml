name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/setup-node@v2.4.0
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org

      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-hash-${{ hashFiles('yarn.lock') }}

      - name: Configure npm
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install Packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --production=false

      - name: Config git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Bump version
        if: "!contains(github.event.head_commit.message, '[skip release]')"
        run:
          yarn bump --yes --conventional-commits --no-changelog

      - name: Create tag
        if: "!contains(github.event.head_commit.message, '[skip release]')"
        id: new-tag
        run: echo "::set-output name=tag::$(node -p 'require("./lerna.json").version')"

      - name: Commit tag
        if: "!contains(github.event.head_commit.message, '[skip release]')"
        run: |
          git add . && git commit -m "chore: release v${{steps.new-tag.outputs.tag}} [skip ci]" && git tag -a v${{steps.new-tag.outputs.tag}} -m "v${{steps.new-tag.outputs.tag}}"

      - name: Build
        run: yarn run release

      - name: Publish
        if: "!contains(github.event.head_commit.message, '[skip release]')"
        run:
          yarn lerna publish from-package --yes --dist-tag ${{steps.extract-branch.outputs.branch ==
          'main' && 'latest' }}
        env:
          NODE_AUTH_TOKEN: '${{secrets.NPM_TOKEN}}'

      - name: Push changes
        if: "!contains(github.event.head_commit.message, '[skip release]')"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
